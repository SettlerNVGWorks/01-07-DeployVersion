#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –¥–ª—è PrognozSports1.ru
set -e

echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –¥–ª—è PrognozSports1.ru..."

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

BACKEND_URL="http://localhost:8001"

# Test backend health
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ health backend...${NC}"
if curl -f $BACKEND_URL/api/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Backend —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
else
    echo -e "${RED}‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
    exit 1
fi

# Test MongoDB connection
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB...${NC}"
if docker-compose exec -T mongodb mongosh --eval "db.adminCommand('ping')" sport_predictions > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞${NC}"
else
    echo -e "${RED}‚ùå MongoDB –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
fi

# Test Sports API
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Sports API...${NC}"
STATS_RESPONSE=$(curl -s $BACKEND_URL/api/stats)
if echo $STATS_RESPONSE | grep -q "total_predictions"; then
    echo -e "${GREEN}‚úÖ Sports API —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    echo "   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: $(echo $STATS_RESPONSE | head -c 100)..."
else
    echo -e "${RED}‚ùå Sports API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    echo "   –û—Ç–≤–µ—Ç: $STATS_RESPONSE"
fi

# Test Matches API
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Matches API...${NC}"
MATCHES_RESPONSE=$(curl -s $BACKEND_URL/api/matches/today)
if echo $MATCHES_RESPONSE | grep -q "success"; then
    echo -e "${GREEN}‚úÖ Matches API —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    echo "   –ú–∞—Ç—á–∏: $(echo $MATCHES_RESPONSE | head -c 100)..."
else
    echo -e "${YELLOW}‚ö†Ô∏è  Matches API —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    echo "   –û—Ç–≤–µ—Ç: $MATCHES_RESPONSE"
fi

# Test SendGrid Email
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SendGrid Email...${NC}"
if [ -n "$SENDGRID_API_KEY" ] && [ "$SENDGRID_API_KEY" != "your-sendgrid-api-key" ]; then
    echo -e "${GREEN}‚úÖ SendGrid API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    
    # Test sending email (create a test endpoint for this)
    cat > test_email.js << 'EOF'
const sgMail = require('@sendgrid/mail');
sgMail.setApiKey(process.env.SENDGRID_API_KEY);

const testEmail = {
    to: process.env.SENDGRID_FROM_EMAIL,
    from: process.env.SENDGRID_FROM_EMAIL,
    subject: '–¢–µ—Å—Ç Email - PrognozSports1.ru',
    text: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SendGrid –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.'
};

sgMail.send(testEmail)
    .then(() => {
        console.log('‚úÖ Test email sent successfully');
        process.exit(0);
    })
    .catch((error) => {
        console.error('‚ùå Email test failed:', error.message);
        process.exit(1);
    });
EOF

    cd backend && node -e "require('dotenv').config(); $(cat ../test_email.js)" 2>/dev/null
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ SendGrid Email —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${RED}‚ùå SendGrid Email –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    fi
    rm -f ../test_email.js
    cd ..
else
    echo -e "${RED}‚ùå SendGrid API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
fi

# Test Telegram Bot
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Bot...${NC}"
if [ -n "$TELEGRAM_BOT_TOKEN" ] && [ "$TELEGRAM_BOT_TOKEN" != "your-telegram-bot-token" ]; then
    BOT_INFO=$(curl -s "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/getMe")
    if echo $BOT_INFO | grep -q "\"ok\":true"; then
        BOT_USERNAME=$(echo $BOT_INFO | grep -o '"username":"[^"]*"' | cut -d'"' -f4)
        echo -e "${GREEN}‚úÖ Telegram Bot —Ä–∞–±–æ—Ç–∞–µ—Ç (@$BOT_USERNAME)${NC}"
        
        # Check webhook info
        WEBHOOK_INFO=$(curl -s "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/getWebhookInfo")
        WEBHOOK_URL=$(echo $WEBHOOK_INFO | grep -o '"url":"[^"]*"' | cut -d'"' -f4)
        if [ -n "$WEBHOOK_URL" ]; then
            echo -e "${GREEN}‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω: $WEBHOOK_URL${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
        fi
    else
        echo -e "${RED}‚ùå Telegram Bot –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    fi
else
    echo -e "${RED}‚ùå Telegram Bot —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
fi

# Test database collections
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π MongoDB...${NC}"
COLLECTIONS=$(docker-compose exec -T mongodb mongosh sport_predictions --quiet --eval "db.getCollectionNames()" 2>/dev/null || echo "[]")
if echo $COLLECTIONS | grep -q "users"; then
    echo -e "${GREEN}‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã${NC}"
    
    # Count documents
    USER_COUNT=$(docker-compose exec -T mongodb mongosh sport_predictions --quiet --eval "db.users.countDocuments()" 2>/dev/null || echo "0")
    MATCH_COUNT=$(docker-compose exec -T mongodb mongosh sport_predictions --quiet --eval "db.matches.countDocuments()" 2>/dev/null || echo "0")
    
    echo "   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $USER_COUNT"
    echo "   ‚öΩ –ú–∞—Ç—á–µ–π: $MATCH_COUNT"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã${NC}"
fi

echo ""
echo -e "${GREEN}üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo ""
echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
echo "   Backend: ‚úÖ"
echo "   MongoDB: $(if docker-compose exec -T mongodb mongosh --eval "db.adminCommand('ping')" sport_predictions > /dev/null 2>&1; then echo '‚úÖ'; else echo '‚ùå'; fi)"
echo "   Sports API: ‚úÖ"
echo "   Email: $(if [ -n "$SENDGRID_API_KEY" ]; then echo '‚úÖ'; else echo '‚ùå'; fi)"
echo "   Telegram: $(if [ -n "$TELEGRAM_BOT_TOKEN" ]; then echo '‚úÖ'; else echo '‚ùå'; fi)"

echo ""
echo -e "${YELLOW}üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:${NC}"
if [ -z "$SENDGRID_API_KEY" ] || [ "$SENDGRID_API_KEY" = "your-sendgrid-api-key" ]; then
    echo "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SendGrid API –∫–ª—é—á –≤ .env —Ñ–∞–π–ª–µ"
fi
if [ -z "$TELEGRAM_BOT_TOKEN" ] || [ "$TELEGRAM_BOT_TOKEN" = "your-telegram-bot-token" ]; then
    echo "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Telegram Bot —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
fi
echo "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ webhook –¥–ª—è Telegram: curl -X POST $BACKEND_URL/api/telegram/set-webhook -d '{\"url\":\"https://prognozSports1.ru/api/telegram/webhook\"}'"
echo "   - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ —Å–∞–π—Ç–µ"